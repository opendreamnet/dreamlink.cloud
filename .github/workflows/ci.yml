name: Deploy

on:
  workflow_dispatch:
  push:
    tags:
      - v*

env:
  NODE_ENV: production 

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: üìÅ Checkout
        uses: actions/checkout@master

      - name: üì¶ Cache node_modules
        uses: actions/cache@v2.1.6
        env:
          cache-name: dreamlink-cache2
        with:
          path: |
            node_modules
            !node_modules/.cache
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
            .yarn/install-state.gz
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: üèó Setup NodeJS
        uses: actions/setup-node@v2.3.0
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: üë®üèª‚Äçüíª Install dependencies
        run: yarn install

      - name: üèóÔ∏è Build
        env:
          GOOGLE_TAG_MANAGER_ID: GTM-TNK475T
        run: yarn run generate

      - name: üöÄ Deploy
        run: yarn run deploy
        timeout-minutes: 20
        env:
          DEPLOY_PINATA_TOKEN: ${{ secrets.DEPLOY_PINATA_TOKEN }}
          DEPLOY_DREAMLINKCLUSTER_USERNAME: dreamnet
          DEPLOY_DREAMLINKCLUSTER_PASSWORD: ${{ secrets.DEPLOY_DREAMLINKCLUSTER_PASSWORD }}
          DEPLOY_CLOUDFLARE_EMAIL: ${{ secrets.DEPLOY_CLOUDFLARE_EMAIL }}
          DEPLOY_CLOUDFLARE_KEY: ${{ secrets.DEPLOY_CLOUDFLARE_KEY }}
          DEPLOY_CLOUDFLARE_ZONE: dreamlink.cloud
          DEPLOY_CLOUDFLARE_RECORD: _dnslink.www

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
